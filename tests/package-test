#!/bin/bash
set -e

var_tmp=$(mktemp -d --tmpdir="${TMPDIR:-/var/tmp/}") || exit
trap 'rm -rf -- "$var_tmp"' EXIT
tmp_uid=custom-$RANDOM

cat >"$var_tmp"/pacman.conf <<EOF
[options]
HoldPkg = pacman-git glibc
Architecture = auto
CheckSpace
CacheDir = $var_tmp
CacheDir = /var/cache/pacman/pkg
[core]
Include = /etc/pacman.d/mirrorlist
[extra]
Include = /etc/pacman.d/mirrorlist
[community]
Include = /etc/pacman.d/mirrorlist
[$tmp_uid]
SigLevel = Optional TrustAll
Server = file://$var_tmp
EOF

# create pacman wrapper for makepkg -s operations
{ printf '#!/bin/sh --\n'
  printf 'pacman --config "%s" "$@"\n' "$var_tmp"/pacman.conf
} >"$var_tmp"/pacman
chmod +x "$var_tmp"/pacman

# create local repository
repo-add "$var_tmp/$tmp_uid".db.tar
sudo pacsync --config "$var_tmp"/pacman.conf "$tmp_uid"

# test package candidates
source ./package

for pkg in "${test_package[@]}"; do
    env - HOME=$HOME USER=$USER PATH=$PATH AURDEST="$var_tmp" PACMAN="$var_tmp"/pacman aur sync \
        --pacman-conf "$var_tmp"/pacman.conf -rnd "$tmp_uid" --no-view --margs --skippgpcheck "$pkg"
    "$var_tmp"/pacman -Si "$tmp_uid/$pkg"
done
