#!/bin/bash
set -e

tmp=$(mktemp -d)
trap 'rm -rf -- "$tmp"' EXIT
tmp_uid=custom-$RANDOM

cat >"$tmp"/pacman.conf <<EOF
[options]
HoldPkg = pacman-git glibc
Architecture = auto
CheckSpace
[core]
Include = /etc/pacman.d/mirrorlist
[extra]
Include = /etc/pacman.d/mirrorlist
[community]
Include = /etc/pacman.d/mirrorlist
[$tmp_uid]
SigLevel = Optional TrustAll
Server = file://$tmp
EOF

cat >"$tmp"/PKGBUILD <<EOF
pkgname=foo
pkgver=1
pkgrel=1
arch=('any')

package() {
    true
}
EOF

# create pacman wrapper for makepkg -s operations
{ printf '#!/bin/sh --\n'
  printf 'pacman --config "%s" "$@"\n' "$tmp"/pacman.conf
} >"$tmp"/pacman
chmod +x "$tmp"/pacman

# create local repository
repo-add "$tmp/$tmp_uid".db.tar

# issue 714: select repository without -d or --root
# TODO: use --dbpath to avoid privilege escalation
env -C "$tmp" - HOME=$HOME USER=$USER PATH=$PATH PACMAN="$tmp"/pacman \
    aur build --no-sync --pacman-conf "$tmp"/pacman.conf
fakeroot -- "$tmp"/pacman --dbpath "$tmp" -Sy
"$tmp"/pacman --dbpath "$tmp" -Si "$tmp_uid"/foo

# vim: set et sw=4 sts=4 ft=sh:\n
